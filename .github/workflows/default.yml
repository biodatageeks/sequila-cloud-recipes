name: Technical tests

# Controls when the workflow will run
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  default-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  checkov-job:
      runs-on: ubuntu-latest
      name: checkov-action
      steps:
        - name: Checkout repo
          uses: actions/checkout@master

        - name: Run Checkov action
          id: checkov
          uses: bridgecrewio/checkov-action@master
          with:
            directory: '.'
            quiet: true # optional: display only failed checks
            soft_fail: true # optional: do not return an error code if there are failed checks
            framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
            output_format: json # optional: the output format, one of: cli, json, junitxml, github_failed_only
            download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
            log_level: DEBUG # optional: set log level. Default WARNING
            container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
